// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc692.RecycledRushRobot.commands;

import edu.wpi.first.wpilibj.command.Command;

import org.usfirst.frc692.RecycledRushRobot.Robot;

/**
 *
 */
public class  AutonDrive extends Command {

    public AutonDrive() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);

        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveTrain);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    
    protected void initialize() {
    	
        /*
	for(int i= 0; i < 5000;i++) {
    	
    	Robot.driveTrain.robotDrive.mecanumDrive_Cartesian(0.0, 0.5, 0.0, 0.0);
    	try {
			Thread.currentThread().sleep(1);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		}
		for(int x = 0; x < 5000;x++){
		
    	Robot.driveTrain.robotDrive.mecanumDrive_Cartesian(0.5, 0.0, 0.0, 0.0);
    	try {
			Thread.currentThread().sleep(1);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		}
		for(int c= 0; c < 5000;c++) {
		
    	Robot.driveTrain.robotDrive.mecanumDrive_Cartesian(0.0, -0.5, 0.0, 0.0);
    	try {
			Thread.currentThread().sleep(1);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		}
		for(int v= 0; v < 5000; v++) {
     	Robot.driveTrain.robotDrive.mecanumDrive_Cartesian(-0.5, 0.0, 0.0, 0.0);
    	try {
			Thread.currentThread().sleep(1);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace(); 
		}
		*/
    }


    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
    
}
